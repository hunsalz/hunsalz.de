name: Deploy to IONOS

on:
  push:
    paths:
      - "**" # includes
      - "!README.md" # excludes

jobs:
  preflight:
    name: Preflight
    runs-on: ubuntu-latest
    env:
      IONOS_SERVICE_HOST: "api-eu.ionos.space"
      IONOS_PROJECT_ID: "99dd94df-fa02-402b-b5a8-5c19327e0628"
      RUN_CI: ${{ !contains(github.event.head_commit.message, 'skip ci') }}
    outputs:
      run_ci: ${{ steps.result.outputs.run_ci }}
      project: ${{ steps.result.outputs.project }}
    steps:
      - name: Fetch project data
        uses: ionos-deploy-now/retrieve-project-info-action@v1
        id: project
        with:
          service-host: ${{ env.IONOS_SERVICE_HOST }}
          project: ${{ env.IONOS_PROJECT_ID }}
          api-key: ${{ secrets.IONOS_API_KEY }}
      - name: Log
        run: |
          echo "::group::Results"
          echo "Project ${{ toJSON(steps.project.outputs) }}"
          echo "Auto deployment ${{ env.RUN_CI == 'true' && 'enabled' ||Â 'skipped' }}"
          echo "::endgroup::"
      - name: Result
        id: result
        run: |
          echo "::set-output name=run_ci::${{ env.RUN_CI == 'true' }}"
          JSON=`echo '${{ toJSON(steps.project.outputs) }}' | jq -c '.'`
          echo "::set-output name=project::$JSON"
  build_and_deploy:
    name: Build & Deploy
    needs: preflight
    runs-on: ubuntu-latest
    env:
      RUN_JOB: ${{ needs.preflight.outputs.run_ci }}
      PROJECT: ${{ needs.preflight.outputs.project }}
      TEST: fromJSON(${{ needs.preflight.outputs.project }})
    steps:
      - name: Set env
        run: echo "PRO=${{ fromJSON(needs.preflight.outputs.project) }}" >> $GITHUB_ENV
      - name: Log
        run: |
          echo ${{ env.RUN_JOB }}
          echo ${{ fromJSON(needs.preflight.outputs.project).site-url }}
          echo ${{ env.PRO.site-url }}
          echo ${{ env.PROJECT }}
          echo ${{ env.PROJECT.site-url }}
          echo ${{ fromJSON(env.PROJECT).site-url }}
          echo ${{ env.TEST }}
          echo ${{ env.TEST.site-url }}

