name: Deploy to IONOS

on:
  push:
    paths:
      - "**" # includes
      - "!README.md" # excludes

jobs:
  preflight:
    name: Preflight
    runs-on: ubuntu-latest
    env:
      RUN_CI: ${{ !contains(github.event.head_commit.message, 'skip ci') }}
    outputs:
      run_ci: ${{ steps.result.outputs.run_ci }}
      project: ${{ steps.result.outputs.project }}
    steps:
      - name: Fetch project data
        uses: ionos-deploy-now/retrieve-project-info-action@v1
        id: project
        with:
          service-host: ${{ env.IONOS_SERVICE_HOST }}
          project: ${{ env.IONOS_PROJECT_ID }}
          api-key: ${{ secrets.IONOS_API_KEY }}
      - name: Log
        run: |
          echo "::group::Results"
          echo "Project ${{ toJSON(steps.project.outputs) }}"
          echo "Auto deployment ${{ env.RUN_CI == 'true' && 'enabled' ||Â 'skipped' }}"
          echo "::endgroup::"
      - name: Result
        id: result
        run: |
          echo "::set-output name=run_ci::${{ steps.project.outputs.deployment-enabled == 'true' && env.RUN_CI == 'true' }}"
          JSON=`echo '${{ toJSON(steps.project.outputs) }}' | jq -c '.'`
          echo "::set-output name=project::$JSON"
  build_and_deploy:
    name: Build & Deploy
    needs: preflight
    runs-on: ubuntu-latest
    env:
      IONOS_SERVICE_HOST: "api-eu.ionos.space"
      IONOS_PROJECT_ID: "99dd94df-fa02-402b-b5a8-5c19327e0628"
      RUN_CI: ${{ needs.preflight.outputs.run_ci }}
      PROJECT: ${{ needs.preflight.outputs.project }}
    steps:
      - name: Log
        run: echo ${{ env.RUN_CI }}
      - name: Checkout project
        if: ${{ env.RUN_CI == 'true' }}
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Setup project
        if: ${{ env.RUN_CI == 'true' }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.16.x
      - name: Prepare project environment
        if: ${{ env.RUN_CI == 'true' }}
        run: |
          yarn install --frozen-lockfile
      - name: Build project
        if: ${{ env.RUN_CI == 'true' }}
        run: yarn build
        env:
          CI: true
          SITE_URL: ${{ fromJSON(env.PROJECT).site-url }}
      - name: Deploy build to ${{ fromJSON(env.PROJECT).site-url }}
        if: ${{ env.RUN_CI == 'true' }}
        uses: ionos-deploy-now/deploy-to-ionos-action@v1
        with:
          storage-quota: ${{ fromJSON(env.PROJECT).storage-quota }}
          project: ${{ env.IONOS_PROJECT_ID }}
          dist-folder: dist
          remote-host: ${{ fromJSON(env.PROJECT).remote-host }}
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: ${{ env.IONOS_SERVICE_HOST }}
          branch-id: ${{ fromJSON(env.PROJECT).branch-id }}

